rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isAdmin(request) {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    function isOwner(request, resource) {    
    	return request.auth != null && (resource == null || request.auth.uid == resource.data.userId) && request.auth.uid == request.resource.data.userId;
    }
    match /{document=**} {
      allow read, write: if false;
    }
    match /rooms/{document=**} {
      allow read: if true;
    }
    match /users/{userId} {
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
    }
    match /challenges/{challengeId} {
      allow create, update, delete: if (resource == null || resource.data.isPublished == false) && (request.resource.data.isOfficial == false || isAdmin(request)) && isOwner(request, resource) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.credits > 0;
      allow read: if true;
    }
  }
}